name: Documentation Build

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'lib/**/*.dart'
      - '**.md'
      - '.github/workflows/documentation_build.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'lib/**/*.dart'
      - '**.md'
  # Permettre de déclencher manuellement le workflow
  workflow_dispatch:

jobs:
  build:
    name: Generate Documentation
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Check if Flutter project exists with Dart files
        id: check_files
        run: |
          if [ -f "pubspec.yaml" ] && [ -d "lib" ] && [ "$(find lib -name '*.dart' | wc -l)" -gt 0 ]; then
            echo "Flutter project with Dart files found"
            echo "dart_docs_ready=true" >> $GITHUB_OUTPUT
          else
            echo "Flutter project not ready for documentation yet, skipping"
            echo "dart_docs_ready=false" >> $GITHUB_OUTPUT
            exit 0  # Sortie propre sans erreur
          fi
      
      - name: Setup Flutter
        if: steps.check_files.outputs.dart_docs_ready == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        if: steps.check_files.outputs.dart_docs_ready == 'true'
        run: flutter pub get
      
      - name: Install dartdoc
        if: steps.check_files.outputs.dart_docs_ready == 'true'
        run: flutter pub global activate dartdoc
      
      - name: Generate documentation
        if: steps.check_files.outputs.dart_docs_ready == 'true'
        run: flutter pub global run dartdoc
        continue-on-error: true  # Tolérer les erreurs de documentation en début de projet
      
      - name: Check if documentation was generated
        if: steps.check_files.outputs.dart_docs_ready == 'true'
        id: check_docs
        run: |
          if [ -d "doc/api" ]; then
            echo "Documentation generated successfully"
            echo "docs_generated=true" >> $GITHUB_OUTPUT
          else
            echo "Documentation generation failed, skipping upload and deployment"
            echo "docs_generated=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Upload documentation
        if: steps.check_files.outputs.dart_docs_ready == 'true' && steps.check_docs.outputs.docs_generated == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: documentation
          path: doc/api/
          retention-days: 7
      
      # Déployer la documentation sur GitHub Pages
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && steps.check_files.outputs.dart_docs_ready == 'true' && steps.check_docs.outputs.docs_generated == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./doc/api
          keep_files: true  # Conserver les fichiers existants sur la branche gh-pages
