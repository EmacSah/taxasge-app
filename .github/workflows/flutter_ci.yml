name: Flutter CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'lib/**'
      - 'test/**'
      - 'pubspec.yaml'
      - 'pubspec.lock'
      - '.github/workflows/flutter_ci.yml'
  pull_request:
    branches: [ main, develop ]
  # Permettre de déclencher manuellement le workflow
  workflow_dispatch:

jobs:
  test:
    name: Flutter Test and Analyze
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Check if Flutter project exists
        id: check_files
        run: |
          if [ -f "pubspec.yaml" ] && [ -d "lib" ]; then
            echo "Flutter project structure found"
            echo "flutter_ready=true" >> $GITHUB_OUTPUT
          else
            echo "Flutter project not ready yet, skipping checks"
            echo "flutter_ready=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Setup Flutter
        if: steps.check_files.outputs.flutter_ready == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        if: steps.check_files.outputs.flutter_ready == 'true'
        run: flutter pub get
      
      - name: Verify formatting
        if: steps.check_files.outputs.flutter_ready == 'true'
        run: dart format --output=none --set-exit-if-changed .
        continue-on-error: true  # Ignorer les erreurs de formatage en début de projet
      
      - name: Analyze project source
        if: steps.check_files.outputs.flutter_ready == 'true'
        run: flutter analyze
        continue-on-error: true  # Être tolérant aux erreurs d'analyse en début de projet
      
      - name: Check for test directory
        if: steps.check_files.outputs.flutter_ready == 'true'
        id: check_tests
        run: |
          if [ -d "test" ] && [ "$(find test -name '*.dart' | wc -l)" -gt 0 ]; then
            echo "Tests found"
            echo "tests_exist=true" >> $GITHUB_OUTPUT
          else
            echo "No tests found yet, skipping test step"
            echo "tests_exist=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Run tests
        if: steps.check_files.outputs.flutter_ready == 'true' && steps.check_tests.outputs.tests_exist == 'true'
        run: flutter test --coverage
      
      - name: Upload coverage reports
        if: steps.check_files.outputs.flutter_ready == 'true' && steps.check_tests.outputs.tests_exist == 'true'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          fail_ci_if_error: false  # Ne pas échouer si codecov a des problèmes
          verbose: true
